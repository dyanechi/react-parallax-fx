{"version":3,"file":"index.js","sources":["../src/hooks/useWindowScrollPosition.ts","../src/utils/conversion.ts","../src/modules/Parallax.tsx"],"sourcesContent":["import { useState, useLayoutEffect } from \"react\";\n\nexport function useWindowScrollPosition(precision: number) {\n    const [scrollPosition, setPosition] = useState(0);\n    useLayoutEffect(() => {\n      function updatePosition() {\n        setPosition(Math.floor(window.pageYOffset / precision) * precision);\n      }\n      window.addEventListener('scroll', updatePosition);\n      updatePosition();\n      return () => window.removeEventListener('scroll', updatePosition);\n    }, []);\n    return scrollPosition;\n}","import {\n    Color,\n    RGBA\n} from '../../@types';\n\nexport const getRGBA = (color: Color): RGBA => {\n    const arr: number[] = [];\n    if (typeof(color) === 'string') {\n        if (color.length === 4) color += 'f';\n        else if (color.length === 7) color += 'ff';\n        if ( /^#[0-9a-fA-F]{8}$/i.test(color) ) {\n            color\n            .replace('#', '')\n            .split(/(..)/g)\n            .filter(s => s)\n            .forEach(s => arr.push(Number('0x'+s)))\n\n            arr[arr.length-1] = arr[arr.length-1]/255;\n            \n        } else if ( /^#[0-9a-fA-F]{4}$/i.test(color) ) {\n            color\n            .replace('#', '')\n            .split(/(.)/g)\n            .filter(s => s)\n            .forEach(s => arr.push( 17*(Number('0x'+s)) ) );\n\n            arr[arr.length-1] = arr[arr.length-1]/255;\n            \n        } else { \n            throw new Error(`${color} is invalid. 'Color' must be valid Hex or RGBA value. `);\n        }\n\n        return arr as RGBA;\n    }\n    return color as RGBA;\n}\nexport const getRGBAValues = (start: Color, end: Color): [RGBA, RGBA] => {\n    return [getRGBA(start), getRGBA(end)];\n}\n\nexport const lerp = (start: number, end: number, t: number, fn?: (x:number) => number): number => {\n    if (start === end) return start;\n    const x = start < end ? \n        ((end * t) + (start - (start * t)))\n            :\n        (start - (start * t) + (end * t));\n    return fn ? fn(x) : x;\n}\n\nexport const lerpRGBA = (start: Color, end: Color, t: number): number[] => {\n    let _start = getRGBA(start) as RGBA;\n    let _end = getRGBA(end) as RGBA;\n    return _start.map((s, i) => lerp(s, _end[i], t));\n}\n","import React, { useState, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { useWindowScrollPosition } from '../hooks';\n\nimport {\n    IParallaxProps,\n} from '../../@types';\n\nimport {\n    lerp,\n    lerpRGBA,\n} from '../utils';\n\n\n\n// ANCHOR: Main Component\nexport function Parallax ({ \n    startScroll,\n    endScroll, \n    speed, \n    opacity, \n    transform,\n    offset,\n    background, \n    gradient,\n    filter,\n    disabled,\n    children \n}: IParallaxProps) {\n\n    // --- S T A T E S  &  V A R I A B L E S --- //\n\n    const { ref, inView, entry } = useInView({\n\n    })\n    console.log(inView);\n    const target = entry?.target as HTMLElement;\n    const topScrollPosition = useWindowScrollPosition(1);\n    const [ progress, setProgress ] = useState(0);\n\n\n    // --- C O N F I G  &  G E T T E R S --- //\n\n    const customScrollPosition = (offset: number) => {\n        return offset;\n    }\n\n    const getStartScrollValue = (m: 'top' | 'center' | 'bottom' | number) => {\n        switch(m) {\n            case 'top': return topScrollPosition;\n            case 'center': return topScrollPosition + (window.innerHeight/2);\n            case 'bottom': return topScrollPosition + window.innerHeight;\n            default: return customScrollPosition(m) || topScrollPosition;\n        }\n    }\n\n    const [config, setConfig] = useState({\n        startScroll: getStartScrollValue(startScroll || 'top'),\n        endScroll: endScroll? endScroll.toString().includes('%')? 1000 : parseInt(endScroll.toString()) : 300,\n        speed: (speed || 20) / 100,\n    })\n\n\n\n\n    // --- C  A L C U L A T I O N --- //\n\n    // ANIMATION PROGRESS UPDATER\n    const calculateProgress = () => {\n        const target = entry && entry.target as HTMLElement;\n            if(!target) return;\n        const start = (target.offsetParent as HTMLElement).offsetTop + (offset? offset : 0);\n        const end = start + config.endScroll;\n        const scrollHeight = end - start;\n\n        const current = config.startScroll + topScrollPosition;\n        const diff = current - start;\n        const progress = diff / scrollHeight;\n        // const status = (current < start) ? 'above' : (current > end) ? 'below' : 'in progress';\n        // const result = (current < start) ? 0 : (current > end) ? 1 : current / scrollHeight;\n        const result = progress < 0 ? 0 : progress > 1 ? 1 : progress;\n\n        // console.info(\n        //     'Progress!\\n', \n        //     `start: ${start}\\n`, \n        //     `end: ${end}\\n`, \n        //     `scrollHeight: ${scrollHeight}\\n`, \n        //     `config startScroll: ${config.startScroll}\\n`,\n        //     `manual startScroll: ${topScrollPosition + window.innerHeight}\\n`,\n        //     `automated startScroll: ${getStartScrollValue(startScroll || \"top\")}\\n`,\n        //     `current: ${current}\\n`, \n        //     `diff: ${diff}\\n`, \n        //     `progress: ${progress}\\n`, \n        //     `result: ${result}`\n        // );\n\n        setProgress(result);\n    }\n    \n\n\n    // ANIMATION EFFECTS\n    const transition = () => {\n        if (target) {\n            \n            if (opacity) {\n                const calculated = lerp(...opacity, progress);\n                target.style.opacity = calculated.toFixed(3);\n            }\n\n            if (speed) {\n                // const dist = target.offsetTop - config.startScroll;\n                // target.style.transform = `translateY(${dist*config.speed}px)`;\n            }\n    \n            if (background) {\n                const rgbaValues = lerpRGBA(...background, progress);\n                target.style.backgroundColor = `rgba(${rgbaValues.join(',')}) `;\n            } else if (gradient) {\n                const { type, dir, start, end } = gradient;\n                if (start.length < 2 || end.length < 2) throw new Error(`'start' and 'end' must have at least 2 elements`);\n                if (start.length !== end.length) throw new Error(`'start' and 'end' array length must be the same`);\n\n                const rgbaArray = [];\n                for (let i = 0; i < start.length; i++) {\n                    const rgbaValues = lerpRGBA(start[i], end[i], progress);\n                    rgbaArray.push(`rgba(${rgbaValues.join(',')})`);\n                }\n                console.log(type, dir, start, end);\n                target.style.background = `${type? type : 'linear'}-gradient(${dir? dir+'deg,' : ''}${rgbaArray.join(',')})`;\n            }\n\n\n            // TRANSFORM ANIMATIONS\n            let _transformStr = \"\";\n            if (transform) {\n                const { \n                    translate, translateX, translateY,\n                    scale,\n                    rotate,\n                } = transform;\n\n                // --- 2D Transformation --- //\n                // Translation\n                // Note: If using both translation, `translate` is preferred.\n                if (translate) {\n                    const valueX = lerp(...translate[0], progress);\n                    const valueY = lerp(...translate[1], progress);\n                    _transformStr += `translate(${valueX}px, ${valueY}px) `;\n                } else if (translateX) {\n                    _transformStr += `translateX(${lerp(...translateX, progress)}px `;\n                } else if (translateY) {\n                    _transformStr += `translateY(${lerp(...translateY, progress)}px `;\n                }\n                \n                \n                if (scale) {\n                    _transformStr += `scale(${lerp(...scale, progress)}) `;\n                }\n                if (rotate) {\n                    _transformStr += `rotate(${lerp(...rotate, progress)}deg) `;\n                }\n\n\n                if (_transformStr !== \"\") target.style.transform = _transformStr;\n            }\n\n\n            // FILTERS\n\n            if (filter) {\n                const blur = lerp(...filter.blur || [0, 0], progress);\n                target.style.filter = `blur(${blur}px) `;\n            }\n        }\n    }\n\n\n\n    // --- R E N D E R   E F F E C T S --- //\n\n    // CALCULATE PROGRESS ON SCROLL\n    useEffect(() => {\n        if(disabled) return;\n        calculateProgress();\n        return () => {}\n    }, [topScrollPosition]);\n\n\n    // PROGRESS ANIMATION FRAME UPDATES\n    useEffect(() => {\n        requestAnimationFrame(transition);\n    }, [progress]);\n\n\n    \n    // INITIALIZE\n    const initialize = () => {\n        if(target) {\n            const end = endScroll?.toString();\n            const _endScroll = end ? end.includes('%')? (parseInt(end)/100)*target.offsetHeight : parseInt(end) : (target.offsetParent as HTMLElement).offsetHeight;\n            setConfig({\n                ...config, \n                endScroll: _endScroll\n            });\n            calculateProgress();\n            transition();\n        }\n    }\n    \n\n    const handleResize = () => {\n        setConfig({\n            ...config, \n            startScroll: getStartScrollValue(startScroll || \"top\")\n        });\n    }\n\n    useEffect(() => {\n        initialize();\n        return () => {}\n    }, [target]);\n\n    useEffect(() => {\n        setProgress(0);\n\n        // This is required in order to update beginning of scroll \n        // animation after screen resize.\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    \n    // --- J S X   R E T U R N--- //\n    return (\n        <div style={{ position: \"relative\", width: \"100%\", height: \"fit-content\" }}>\n            <div \n                ref={ref}\n                style={{\n                    position: \"relative\",\n                    width: \"100%\",\n                    height: \"fit-content\",\n                    willChange: \"transform, opacity, background\"\n                }}\n            >\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Parallax;\n"],"names":["useState","useLayoutEffect","useInView","useEffect","React"],"mappings":"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"}